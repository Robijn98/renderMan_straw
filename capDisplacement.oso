OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader capDisplacement
oparam	float	result	0		%read{2147483647,-1} %write{20,20}
param	float	major_radius	0.189999998		%read{10,10} %write{2147483647,-1}
global	point	P	%read{1,18} %write{2147483647,-1}
global	float	u	%read{12,15} %write{2147483647,-1}
local	point	Pos	%read{2,6} %write{1,1}
local	float	r	%read{10,10} %write{9,9}
local	float	radial	%read{16,16} %write{10,10}
local	float	u_coord	%read{2147483647,-1} %write{15,15}
local	float	___345_n	%read{20,20} %write{19,19}
const	string	$const1	"object"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	int	$const4	0		%read{2,3} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{2,2}
temp	float	$tmp2	%read{4,4} %write{3,3}
temp	float	$tmp3	%read{8,8} %write{4,4}
const	int	$const5	1		%read{5,6} %write{2147483647,-1}
temp	float	$tmp4	%read{7,7} %write{5,5}
temp	float	$tmp5	%read{7,7} %write{6,6}
temp	float	$tmp6	%read{8,8} %write{7,7}
temp	float	$tmp7	%read{9,9} %write{8,8}
const	float	$const6	1		%read{12,14} %write{2147483647,-1}
const	string	$const7	"mod"		%read{11,11} %write{2147483647,-1}
temp	float	$tmp8	%read{14,14} %write{13,13}
temp	float	$tmp9	%read{13,13} %write{12,12}
temp	float	$tmp10	%read{15,15} %write{14,14}
const	float	$const8	0		%read{16,16} %write{2147483647,-1}
temp	int	$tmp11	%read{17,17} %write{16,16}
const	string	$const9	"perlin"		%read{19,19} %write{2147483647,-1}
temp	point	$tmp12	%read{19,19} %write{18,18}
const	float	$const11	10		%read{18,18} %write{2147483647,-1}
const	float	$const12	0.0199999996		%read{20,20} %write{2147483647,-1}
code ___main___
# capDisplacement.osl:8
#     point Pos = transform("object", P);
	functioncall	$const2 2 	%filename{"capDisplacement.osl"} %line{8} %argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:263
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	Pos $const3 $const1 P 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{263} %argrw{"wrrr"}
# capDisplacement.osl:9
#     float r = sqrt(Pos[0]*Pos[0] + Pos[1]*Pos[1]);
	compref		$tmp1 Pos $const4 	%filename{"capDisplacement.osl"} %line{9} %argrw{"wrr"}
	compref		$tmp2 Pos $const4 	%argrw{"wrr"}
	mul		$tmp3 $tmp1 $tmp2 	%argrw{"wrr"}
	compref		$tmp4 Pos $const5 	%argrw{"wrr"}
	compref		$tmp5 Pos $const5 	%argrw{"wrr"}
	mul		$tmp6 $tmp4 $tmp5 	%argrw{"wrr"}
	add		$tmp7 $tmp3 $tmp6 	%argrw{"wrr"}
	sqrt		r $tmp7 	%argrw{"wr"}
# capDisplacement.osl:10
#     float radial = r - major_radius;
	sub		radial r major_radius 	%line{10} %argrw{"wrr"}
# capDisplacement.osl:12
#     float u_coord = mod(u, 1.0);
	functioncall	$const7 16 	%line{12} %argrw{"r"}
# /opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp9 u $const6 	%filename{"/opt/pixar/RenderManProServer-26.2/lib/osl/include/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp8 $tmp9 	%argrw{"wr"}
	mul		$tmp10 $const6 $tmp8 	%argrw{"wrr"}
	sub		u_coord u $tmp10 	%argrw{"wrr"}
# capDisplacement.osl:15
#     if(radial < 0.0)
	lt		$tmp11 radial $const8 	%filename{"capDisplacement.osl"} %line{15} %argrw{"wrr"}
	if		$tmp11 21 22 	%argrw{"r"}
# capDisplacement.osl:17
#         float n = noise("perlin", P * 10);
	mul		$tmp12 P $const11 	%line{17} %argrw{"wrr"}
	noise		___345_n $const9 $tmp12 	%argrw{"wrr"}
# capDisplacement.osl:18
#         result = n * 0.02;
	mul		result ___345_n $const12 	%line{18} %argrw{"wrr"}
# capDisplacement.osl:22
#         return;
	exit	%line{22}
	end
